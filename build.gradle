plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'application'
    id 'java-library'
}

apply from: "$rootDir/dependencies.gradle"

allprojects {
    apply from: "${rootDir}/dependencies.gradle"
    apply plugin: 'application'
    group = 'com.tr.demo'
    version = 'v1.0.0'
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    useJUnit()
    useTestNG()
    useJUnitPlatform()
}

subprojects {
    apply from: "${rootDir}/dependencies.gradle"
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    buildscript {
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.mavenBom}"
    }
}


allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
    }
    buildscript {
        repositories {
            mavenCentral()
            maven { url "https://repo.spring.io/milestone" }
            maven { url "https://repo.spring.io/snapshot" }
        }
    }

    dependencies {
        implementation libs.springBootWeb
        compileOnly libs.lombok
        annotationProcessor libs.lombok
        implementation libs.jwt
        implementation libs.springBootActuator
        implementation libs.springBootValidation
        implementation libs.jodaTime
        implementation libs.jjwtApi
        implementation libs.jjwtImpl
        implementation libs.jjwtJackson
        implementation libs.feignCore
        implementation libs.eurekaClient
        implementation libs.cloudStarterConfig
        implementation libs.mockitoJunit
        implementation libs.mockitoCore
        implementation libs.junitJupiterApi
        implementation libs.junitJupiterEngine
        implementation libs.testStarter
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}